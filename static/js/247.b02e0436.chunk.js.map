{"version":3,"file":"static/js/247.b02e0436.chunk.js","mappings":"yNA8CA,UA1Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GASR,OARAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC0BC,EAAAA,EAAAA,IAAgBH,GAD1C,OACQI,EADR,OAEEL,EAAQK,GAFV,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACL,IAECF,GAKH,+BACI,wBACGA,EAAKQ,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,UAAWP,EAA6B,EAA7BA,GAAIQ,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAChC,OACE,0BACGA,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKH,IAGP,KAEF,4BACE,wBAAKA,KACL,wCACA,uBAAID,SAZCP,EAgBZ,QAxBA,IA4BV,C,+LC1CDY,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAIHC,EAAiB,mCAAG,6FACzBC,EAAU,CACdC,OAAQ,CACJC,QAASJ,IAHgB,SAOVD,EAAAA,EAAAA,IAAU,sBAAuBG,GAPvB,cAO3BG,EAP2B,yBAQ1BA,EAASC,KAAKC,SARY,2CAAH,qDAWjBC,EAAe,mCAAG,WAAMC,GAAN,gFACvBP,EAAU,CACdC,OAAQ,CACJC,QAASJ,EACTS,MAAAA,IAJuB,SAQRV,EAAAA,EAAAA,IAAU,gBAAiBG,GARnB,cAQzBG,EARyB,yBASxBA,EAASC,KAAKC,SATU,2CAAH,sDAYfG,EAAe,mCAAG,WAAMvB,GAAN,gFACvBe,EAAU,CACdC,OAAQ,CACJC,QAASJ,IAHc,SAORD,EAAAA,EAAAA,IAAA,iBAAoBZ,GAAMe,GAPlB,cAOzBG,EAPyB,yBAQxBA,EAASC,MARe,2CAAH,sDAWfhB,EAAe,mCAAG,WAAMqB,GAAN,gFACvBT,EAAU,CACdC,OAAQ,CACJC,QAAQJ,IAHe,SAORD,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAAuCT,GAP/B,cAOzBG,EAPyB,yBAQxBA,EAASC,KAAKrB,MARU,2CAAH,sDAWf2B,EAAe,mCAAG,WAAMzB,GAAN,gFACvBe,EAAU,CACdC,OAAQ,CACJC,QAASJ,IAHc,SAORD,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,YAAkCe,GAP1B,cAOzBG,EAPyB,yBAQxBA,EAASC,KAAKC,SARU,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/moviesAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/moviesAPI';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    async function getMovieInfo() {\n      const movieCast = await getMovieCredits(id);\n      setCast(movieCast);\n    }\n    getMovieInfo();\n  }, [id]);\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <>\n        <ul>\n          {cast.map(({ character, id, name, profile_path }) => {\n            return (\n              <li key={id}>\n                {profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={name}\n                  />\n                ) : (\n                  '-'\n                )}\n                <div>\n                  <h3>{name}</h3>\n                  <h4>Character:</h4>\n                  <p>{character}</p>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bf1b18a8f71345d05dd12a0ab0ee762f';\n\n\n\nexport const getMoviesTrending = async () => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n    }\n}\n\nconst response = await axios.get('/trending/movie/day', options);\nreturn response.data.results;\n};\n\nexport const getMoviesSearch = async query => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n        query,\n    }\n}\n\nconst response = await axios.get('/search/movie', options)\nreturn response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n    }\n}\n\nconst response = await axios.get(`/movie/${id}`, options)\nreturn response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const options = {\n    params: {\n        api_key:API_KEY,\n    }\n}\n\nconst response = await axios.get(`/movie/${movieId}/credits`, options);\nreturn response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n    }\n}\n\nconst response = await axios.get(`/movie/${id}/reviews`, options);\nreturn response.data.results;\n};\n"],"names":["useState","cast","setCast","id","useParams","useEffect","getMovieCredits","movieCast","getMovieInfo","map","character","name","profile_path","src","alt","axios","API_KEY","getMoviesTrending","options","params","api_key","response","data","results","getMoviesSearch","query","getMovieDetails","movieId","getMovieReviews"],"sourceRoot":""}