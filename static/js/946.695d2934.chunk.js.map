{"version":3,"file":"static/js/946.695d2934.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/movies-list.module.css?3466","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchBar/search-bar.module.css?1c1e","components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviesPage.jsx","services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movies-list_list__QsEHr\",\"item_text\":\"movies-list_item_text__6vcIc\"};","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './movies-list.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <li key={id} className={css.list_item}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n              />\n              <p className={css.item_text}>{title}</p>\n            </NavLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"search-bar_Searchbar__5iKIE\",\"SearchForm\":\"search-bar_SearchForm__oWk2K\",\"SearchForm_button\":\"search-bar_SearchForm_button__j57lH\",\"SearchForm_button_label\":\"search-bar_SearchForm_button_label__5Q8mw\",\"input\":\"search-bar_input__Bh55f\"};","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport css from './search-bar.module.css';\nimport PropTypes from 'prop-types'\n\nconst Searchbar = ({onSubmit}) => {\n\nconst [search, setSearch] = useState('')\n\n\nconst handleChange = (e) => {\n  setSearch( e.target.value.toLowerCase());\n}\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n\n\n  if (search.trim() === '') {\n    Notify.warning(\"Please write something before searching\");\n    return;\n  }\n\n  onSubmit(search);\n  setSearch('' );\n}\n\n \n    return (\n      <header className={css.Searchbar}>\n        <form className={css.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={css.SearchForm_button}>\n            <span className={css.SearchForm_button_label}>Search</span>\n          </button>\n\n          <input\n            className={css.SearchForm_input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={search}\n            onChange={handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Searchbar;","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesSearch } from 'services/moviesAPI';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchValue = searchParams.get('data') ?? '';\n\n  const handleSubmit = data => {\n    setMovies([]);\n    setQuery(data);\n    setSearchParams(data !== '' ? { data } : {});\n  };\n\n  useEffect(() => {\n    if (!query && !searchValue) {\n      return;\n    }\n\n    async function loadMovies() {\n      try {\n        const movies = await getMoviesSearch(searchValue ? searchValue : query);\n        if (movies.length === 0) {\n          Notify.failure('Please, write something!');\n        }\n        setMovies(movies);\n      } catch (error) {}\n    }\n    loadMovies();\n  }, [query, searchValue]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bf1b18a8f71345d05dd12a0ab0ee762f';\n\n\n\nexport const getMoviesTrending = async () => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n    }\n}\n\nconst response = await axios.get('/trending/movie/day', options);\nreturn response.data.results;\n};\n\nexport const getMoviesSearch = async query => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n        query,\n    }\n}\n\nconst response = await axios.get('/search/movie', options)\nreturn response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n    }\n}\n\nconst response = await axios.get(`/movie/${id}`, options)\nreturn response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const options = {\n    params: {\n        api_key:API_KEY,\n    }\n}\n\nconst response = await axios.get(`/movie/${movieId}/credits`, options);\nreturn response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n    }\n}\n\nconst response = await axios.get(`/movie/${id}/reviews`, options);\nreturn response.data.results;\n};\n"],"names":["movies","location","useLocation","className","css","map","id","title","poster_path","to","state","from","src","alt","onSubmit","useState","search","setSearch","e","preventDefault","trim","Notify","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","searchValue","get","useEffect","getMoviesSearch","length","loadMovies","SearchBar","data","axios","API_KEY","getMoviesTrending","options","params","api_key","response","results","getMovieDetails","getMovieCredits","movieId","cast","getMovieReviews"],"sourceRoot":""}