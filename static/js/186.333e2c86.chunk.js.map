{"version":3,"file":"static/js/186.333e2c86.chunk.js","mappings":"yNAsCA,UAlCgB,WACd,OAA8BA,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GASR,OAPAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACwBC,EAAAA,EAAAA,IAAgBH,GADxC,OACQF,EADR,OAEEC,EAAWD,GAFb,2CADc,yBAAC,WAAD,wBAKdM,EACD,GAAE,CAACJ,IACCF,GAIH,8BACGA,EAAQO,QACP,wBACGP,EAAQQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASR,EAAS,EAATA,GAC/B,OACE,2BACE,qCAAaO,MACb,uBAAIC,MAFGR,EAKZ,OAGH,8DAhBG,IAoBV,C,+LClCDS,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAIHC,EAAiB,mCAAG,6FACzBC,EAAU,CACdC,OAAQ,CACJC,QAASJ,IAHgB,SAOVD,EAAAA,EAAAA,IAAU,sBAAuBG,GAPvB,cAO3BG,EAP2B,yBAQ1BA,EAASC,KAAKC,SARY,2CAAH,qDAWjBC,EAAe,mCAAG,WAAMC,GAAN,gFACvBP,EAAU,CACdC,OAAQ,CACJC,QAASJ,EACTS,MAAAA,IAJuB,SAQRV,EAAAA,EAAAA,IAAU,gBAAiBG,GARnB,cAQzBG,EARyB,yBASxBA,EAASC,KAAKC,SATU,2CAAH,sDAYfG,EAAe,mCAAG,WAAMpB,GAAN,gFACvBY,EAAU,CACdC,OAAQ,CACJC,QAASJ,IAHc,SAORD,EAAAA,EAAAA,IAAA,iBAAoBT,GAAMY,GAPlB,cAOzBG,EAPyB,yBAQxBA,EAASC,MARe,2CAAH,sDAWfK,EAAe,mCAAG,WAAMC,GAAN,gFACvBV,EAAU,CACdC,OAAQ,CACJC,QAAQJ,IAHe,SAORD,EAAAA,EAAAA,IAAA,iBAAoBa,EAApB,YAAuCV,GAP/B,cAOzBG,EAPyB,yBAQxBA,EAASC,KAAKO,MARU,2CAAH,sDAWfpB,EAAe,mCAAG,WAAMH,GAAN,gFACvBY,EAAU,CACdC,OAAQ,CACJC,QAASJ,IAHc,SAORD,EAAAA,EAAAA,IAAA,iBAAoBT,EAApB,YAAkCY,GAP1B,cAOzBG,EAPyB,yBAQxBA,EAASC,KAAKC,SARU,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/moviesAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/moviesAPI';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getMovieInfo() {\n      const reviews = await getMovieReviews(id);\n      setReviews(reviews);\n    }\n    getMovieInfo();\n  }, [id]);\n  if (!reviews) {\n    return null;\n  }\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>Sorry, we don't have any reviews</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bf1b18a8f71345d05dd12a0ab0ee762f';\n\n\n\nexport const getMoviesTrending = async () => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n    }\n}\n\nconst response = await axios.get('/trending/movie/day', options);\nreturn response.data.results;\n};\n\nexport const getMoviesSearch = async query => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n        query,\n    }\n}\n\nconst response = await axios.get('/search/movie', options)\nreturn response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n    }\n}\n\nconst response = await axios.get(`/movie/${id}`, options)\nreturn response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const options = {\n    params: {\n        api_key:API_KEY,\n    }\n}\n\nconst response = await axios.get(`/movie/${movieId}/credits`, options);\nreturn response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const options = {\n    params: {\n        api_key: API_KEY,\n    }\n}\n\nconst response = await axios.get(`/movie/${id}/reviews`, options);\nreturn response.data.results;\n};\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","getMovieReviews","getMovieInfo","length","map","author","content","axios","API_KEY","getMoviesTrending","options","params","api_key","response","data","results","getMoviesSearch","query","getMovieDetails","getMovieCredits","movieId","cast"],"sourceRoot":""}